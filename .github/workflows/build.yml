name: Build Action

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  build:
    name: Build
    runs-on: [ self-hosted, ubuntu-latest-custom ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install LLVM Repo
        run: |
          curl -LO https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 17

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y clang-17 libboost-all-dev libssl-dev libzmq3-dev lcov

      - name: Create build directory
        run: mkdir build

      - name: Build
        working-directory: build
        env:
          CC: clang-17
          CXX: clang++-17
        run: |
          cmake .. -G Ninja -DTARGETS_TO_BUILD="X86"
          ninja

      - name: Run unit tests
        working-directory: build
        run: ./tests --reporter JUnit --out ../test-results.xml

      - name: Generate code coverage report
        working-directory: build
        run: |
          llvm-cov show ./foo -instr-profile=foo.profdata
          llvm-cov export ./libcashew/libcashew.a -instr-profile=default.profdata --format=lcov >> coverage.info
          llvm-cov export ./libcashew-parser/libcashew-parser.a -instr-profile=default.profdata --format=lcov >> coverage.info

      - name: Upload code coverage report
        uses: actions/upload-artifact@v2
        if: success() || failure()
        with:
          name: coverage-report
          path: build/coverage.info

      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: success() || failure()
        with:
          name: test-results
          path: test-results.xml

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build
    permissions:
      checks: write
      pull-requests: write
    if: success() || failure()
    steps:
      - name: Download test results
        uses: actions/download-artifact@v3
        with:
          name: test-results

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: test-results.xml

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download code coverage report
        uses: actions/download-artifact@v3
        with:
          name: coverage-report

      - name: Publish Code Coverage
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          file: coverage.info